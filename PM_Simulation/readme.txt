


게임 디자인 설계서

1. 게임 개요
    게임 제목: 패치마스터 시뮬레이션
    장르: 전략 시뮬레이션, 타이틀 관리
    플랫폼: C# 콘솔 기반 (PC)

    목표:
    챔피언들을 관리하고, 패치를 통해 개선하여 가상의 유저들에게 평가를 받음.
    일정 시간이 지나면서 챔피언과 스킬이 추가되며, 이를 관리하는 것이 목표.
    유저의 피드백을 기반으로 패치를 적용하고 챔피언의 전투력을 증가시켜야 함.

2. 게임 구조
    2.1 게임 시작
    플레이어는 기본적으로 3~5명의 챔피언을 보유한 상태로 시작.
    각 챔피언은 스킬, 스테이터스, 전투력을 가지고 있음.
    첫 번째 일차에서 플레이어는 패치를 통해 챔피언들의 성능을 개선할 수 있는 첫 선택지를 받음.

    2.2 일차 시스템
    일차 진행: 게임은 하루(일차) 단위로 진행되며, 각 일차마다 패치 선택지와 유저들의 피드백을 기반으로 챔피언들을 관리함.
    일차가 지나면: 새로운 챔피언과 스킬이 추가되며, 기존 챔피언들의 전투력과 스킬에 변화를 줌.

    2.3 챔피언
    스킬: 각 챔피언은 여러 스킬을 보유하며, 각 스킬은 전투력에 큰 영향을 미침.
    스테이터스: 각 챔피언은 체력(HP), 공격력(ATK), 방어력(DEF), 속도(SPD) 등의 스테이터스를 가짐.
    전투력: 전투력은 챔피언의 능력치(스킬과 스테이터스)를 종합적으로 평가한 수치로, 전투력은 패치 적용 시 개선될 수 있음.

    2.4 패치 시스템
    패치 시스템은 유저의 피드백과 게임 내 데이터를 바탕으로 자동으로 제공되는 패치 선택지로 구성됨.
    패치 선택지는 공격력 증가, 방어력 향상, 스킬 개선 등으로 나뉘며, 각 패치는 일정 비용을 가지고 있음.
    플레이어는 제공된 패치 선택지 중 하나를 선택하여 챔피언을 개선함.

    2.5 유저 피드백 시스템
    게임 내에서 유저들은 각 챔피언의 성능에 대한 피드백을 남기며, 피드백은 긍정적, 부정적, 중립적으로 분류됨.
    피드백을 기반으로 챔피언의 성능을 평가하고, 이를 통해 플레이어가 패치 선택지를 결정함.
    피드백은 일정 확률로 챔피언의 전투력에 영향을 미침.

    2.6 게임 종료
    게임은 일정 일차가 지나거나, 목표가 달성되면 종료됨.
    목표 예시: 특정 수치의 전투력을 달성하거나, 특정 챔피언을 최대 수준으로 발전시키는 것.

3. 게임 메커니즘
    3.1 전투력 계산 시스템
    전투력은 각 챔피언의 스킬과 스테이터스를 종합적으로 계산하여 결정됨.
    전투력 계산 공식:
    csharp
    복사
    편집
    // 상성에 따른 전투력 계산
    public int CombatPower(Champion opponent)
    {
        int skillPower = 0;
        foreach (var skill in Skills)
        {
            skillPower += skill.Effect;  // 스킬 효과 합산
        }

        // 상대 챔피언의 전투력을 계산
        int opponentCombatPower = (opponent.Attack + skillPower) * (1 + opponent.Defense / 100) + opponent.Speed;

        // 상성 효과를 반영한 전투력 조정
        float typeEffect = GetTypeEffect(this.Type, opponent.Type);

        // 전투력 계산 (상성 효과 반영)
        return (int)((Attack + skillPower) * (1 + Defense / 100) + Speed) * typeEffect;
    }


3.2 패치 선택지
    유저 피드백을 바탕으로 매일 새로운 패치 선택지가 제공됨.
    예시 패치 선택지:
    공격력 강화: 공격력 20% 증가
    방어력 향상: 방어력 15% 증가
    스킬 쿨타임 감소: 스킬 쿨타임 25% 감소
    속도 향상: 이동 속도 10% 증가
    3.3 유저 피드백
    피드백 예시:

    긍정적 피드백: “이 챔피언은 정말 강력해요! 계속 쓰고 싶습니다.”
    부정적 피드백: “너무 약해서 전투에서 쉽게 죽어요. 개선이 필요합니다.”
    중립적 피드백: “괜찮은 챔피언이지만 특별히 뛰어나지는 않습니다.”
    각 피드백은 유저의 기대를 바탕으로 패치 방향을 결정하는 데 도움을 줌.

4. UI/UX 설계
    4.1 게임 화면
    메인 화면: 현재 챔피언 목록과 패치 진행 상황을 볼 수 있음.
    패치 선택 화면: 제공된 패치 선택지와 각 패치의 효과를 설명하는 창.
    유저 피드백 화면: 각 챔피언에 대한 유저들의 피드백을 보여주는 화면.
    4.2 챔피언 상세화면
    챔피언 정보: 각 챔피언의 이름, 스킬, 스테이터스, 전투력 등을 표시.
    패치 이력: 이전에 어떤 패치가 적용되었는지 확인할 수 있는 창.
    5. 게임 목표
    챔피언을 성공적으로 관리하여 최종적으로 가장 강력한 챔피언을 만드는 것.
    유저의 피드백을 바탕으로 효율적인 패치 선택을 하여 챔피언의 성능을 극대화.
    게임 종료 조건을 달성하며, 최종 전투력 또는 챔피언 수준을 목표로 삼아 게임을 완수.
